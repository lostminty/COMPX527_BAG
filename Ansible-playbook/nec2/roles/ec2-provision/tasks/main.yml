---
# tasks file for ec2-provision

- name: Create security group
  ec2_group:
    name: "{{ security_group }}"
    description: "security group for web server"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: firewall_sg

- name: Create the ELB listening over port 80
  ec2_elb_lb:
    name: aws-elb
    state: present
    region: ap-southeast-2
    zones:
      - ap-southeast-2a
      - ap-southeast-2b
      - ap-southeast-2c
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80
        proxy_protocol: true
    #  - protocol: https
    #    load_balancer_port: 443
    #    instance_protocol: http
    #    instance_port: 80
    #    ssl
    #    ssl_certificate_id: "arn:aws:iam::123456789012:server-certificate/company/servercerts/ProdServerCert"
    wait: yes
  register: elb

- name: Create a new EC2 key
  ec2_key:
      name: "{{ ec2_key_name }}"
      region: "{{ region }}"
  register: ec2_key_result 

- name: Save private key 
  copy: content="{{ ec2_key_result.key.private_key }}" dest="{{ ec2_private_key_dir }}" mode=0600
  when: ec2_key_result.changed

- name: Create EC2 web server instance
  ec2:
    key_name: "{{ ec2_key_name }}"
    instance_type: "{{ instance_type }}"
    region: "{{ region }}"
    vpc_subnet_id: "{{ subnet_id1 }}"
    image: "{{ image }}"
    group: "{{ security_group }}"
    wait: true
    count: 3
    instance_tags:
      Name: webservers
  register: ec2

- name: Create EC2 load balancer instance
  ec2:
    key_name: "{{ ec2_key_name }}"
    instance_type: "{{ instance_type }}"
    region: "{{ region }}"
    vpc_subnet_id: "{{ subnet_id1 }}"
    image: "{{ image }}"
    group: "{{ security_group }}"
    wait: true
    count: 1
    instance_tags:
      Name: load_banlancer
  register: ec2_lb

- name: Sleep for 60 seconds
  pause:
    seconds: 60

- name: Get IP address of the newly created host
  shell: "aws ec2 describe-instances --query 'Reservations[*].Instances[*].[State.Name,InstanceId,PublicIpAddress]' --output text | grep running | awk '{print $3}'"
  register: ec2_ip

- name: Add the newly created EC2 instance(s) IP to the inventory file
  lineinfile:
    dest: "/home/mason/Works/nec2/hosts"
    regexp: "{{ ec2_ip.stdout }}"
    insertafter: "[webservers]"
    line: "{{ ec2_ip.stdout }}"

- name: Sleep for 60 seconds
  pause:
    seconds: 60
